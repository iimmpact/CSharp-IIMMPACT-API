/* 
 * IIMMPACT API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2020-09-14T13:01:14Z
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = iimmpact.Client.SwaggerDateConverter;

namespace iimmpact.Model
{
    /// <summary>
    /// CallbackUrlResponseMetadata
    /// </summary>
    [DataContract]
    public partial class CallbackUrlResponseMetadata :  IEquatable<CallbackUrlResponseMetadata>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CallbackUrlResponseMetadata" /> class.
        /// </summary>
        /// <param name="status_code">status_code.</param>
        /// <param name="last_updated">last_updated.</param>
        public CallbackUrlResponseMetadata(decimal? status_code = default(decimal?), string last_updated = default(string))
        {
            this.status_code = status_code;
            this.last_updated = last_updated;
        }
        
        /// <summary>
        /// Gets or Sets status_code
        /// </summary>
        [DataMember(Name="status_code", EmitDefaultValue=false)]
        public decimal? status_code { get; set; }

        /// <summary>
        /// Gets or Sets last_updated
        /// </summary>
        [DataMember(Name="last_updated", EmitDefaultValue=false)]
        public string last_updated { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CallbackUrlResponseMetadata {\n");
            sb.Append("  status_code: ").Append(status_code).Append("\n");
            sb.Append("  last_updated: ").Append(last_updated).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CallbackUrlResponseMetadata);
        }

        /// <summary>
        /// Returns true if CallbackUrlResponseMetadata instances are equal
        /// </summary>
        /// <param name="input">Instance of CallbackUrlResponseMetadata to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CallbackUrlResponseMetadata input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.status_code == input.status_code ||
                    (this.status_code != null &&
                    this.status_code.Equals(input.status_code))
                ) && 
                (
                    this.last_updated == input.last_updated ||
                    (this.last_updated != null &&
                    this.last_updated.Equals(input.last_updated))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.status_code != null)
                    hashCode = hashCode * 59 + this.status_code.GetHashCode();
                if (this.last_updated != null)
                    hashCode = hashCode * 59 + this.last_updated.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
