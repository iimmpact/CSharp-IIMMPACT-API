/* 
 * IIMMPACT API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2020-09-14T13:01:14Z
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using iimmpact.Client;
using iimmpact.Api;
using iimmpact.Model;

namespace iimmpact.Test
{
    /// <summary>
    ///  Class for testing MyAccountApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class MyAccountApiTests
    {
        private MyAccountApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new MyAccountApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of MyAccountApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' MyAccountApi
            //Assert.IsInstanceOfType(typeof(MyAccountApi), instance, "instance is a MyAccountApi");
        }

        
        /// <summary>
        /// Test V1AuthChangePasswordPost
        /// </summary>
        [Test]
        public void V1AuthChangePasswordPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ChangePasswordRequest newPasswordRequest = null;
            //var response = instance.V1AuthChangePasswordPost(newPasswordRequest);
            //Assert.IsInstanceOf<InlineResponse2001> (response, "response is InlineResponse2001");
        }
        
        /// <summary>
        /// Test V1AuthNewPasswordChallengePost
        /// </summary>
        [Test]
        public void V1AuthNewPasswordChallengePostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //NewPasswordRequest newPasswordRequest = null;
            //var response = instance.V1AuthNewPasswordChallengePost(newPasswordRequest);
            //Assert.IsInstanceOf<NewPasswordResponses> (response, "response is NewPasswordResponses");
        }
        
        /// <summary>
        /// Test V1BalanceGet
        /// </summary>
        [Test]
        public void V1BalanceGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.V1BalanceGet();
            //Assert.IsInstanceOf<InlineResponse200> (response, "response is InlineResponse200");
        }
        
    }

}
